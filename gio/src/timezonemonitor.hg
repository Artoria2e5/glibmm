/* Copyright (C) 2011 The giomm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <glibmm/object.h>

_DEFS(giomm,gio)
_PINCLUDE(glibmm/private/object_p.h)

namespace Gio
{

/** TimeZoneMonitor - Monitor the local timezone.
 * TimeZoneMonitor is a utility class to monitor the local timezone for changes
 * (ie: in response to the user manually changing the timezone to that of a
 * different locale).
 *
 * You must use this class in order for your program to notice changes to the
 * local timezone. It works by monitoring the /etc/localtime file. When the
 * timezone is found to have changed, the "changed" signal is emitted on the
 * TimeZoneMonitor.
 *
 * See the C API docs for more information.
 *
 * @newin{2,30}
 */
class TimeZoneMonitor : public Glib::Object
{
  _CLASS_GOBJECT(TimeZoneMonitor, GTimeZoneMonitor, G_TIME_ZONE_MONITOR, Glib::Object, GObject)

public:
  _WRAP_METHOD(static Glib::RefPtr<TimeZoneMonitor> get(), g_time_zone_monitor_get)

  _WRAP_SIGNAL(void changed(), "changed", no_default_handler)
};

} // namespace Gio
