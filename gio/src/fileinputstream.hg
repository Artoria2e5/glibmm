// -*- Mode: C++; indent-tabs-mode: nil; c-basic-offset: 2 -*-

/* Copyright (C) 2007 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <gio/gio.h>

#include <glibmm/iochannel.h>
#include <glibmm/object.h>
#include <glibmm/fileinfo.h>
#include <glibmm/inputstream.h>

_DEFS(giomm,gio)
_PINCLUDE(glibmm/private/inputstream_p.h)

namespace Gio
{

class FileInputStream : public InputStream
{
  _CLASS_GOBJECT(FileInputStream, GFileInputStream, G_FILE_INPUT_STREAM, Glib::InputStream, GInputStream)

public:
  _WRAP_METHOD(Glib::RefPtr<FileInfo> query_info(const std::string& attributes, const Glib::RefPtr<Cancellable>& cancellable),
               g_file_input_stream_query_info,
               errthrow)

  _IGNORE(g_file_input_stream_query_info_async)
  void query_info_async(const std::string& attributes,
                        int io_priority,
                        Glib::RefPtr<Cancellable>& cancellable,
                        const SlotAsyncReady& slot);

  _WRAP_METHOD(Glib::RefPtr<FileInfo> query_info_finish(Glib::RefPtr<AsyncResult>& result),
               g_file_input_stream_query_info_finish,
               errthrow)

  _WRAP_METHOD(goffset tell() const, g_file_input_stream_tell)

  _WRAP_METHOD(bool can_seek() const, g_file_input_stream_can_seek)

  _WRAP_METHOD(bool seek(goffset offset, Glib::SeekType type, const Glib::RefPtr<Cancellable>& cancellable),
               g_file_input_stream_seek,
               errthrow)
};

} // namespace Gio
