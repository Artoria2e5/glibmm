// -*- Mode: C++; indent-tabs-mode: nil; c-basic-offset: 2 -*-

/* Copyright (C) 2007 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <gio/gio.h>
#include <giomm/file.h>
#include <giomm/actiongroup.h>

namespace Gio
{

void Application::open(const type_vec_files& files, const Glib::ustring& hint)
{
  //TODO: Create a templated helper function for this:
  typedef GFile* cpointer;
  cpointer* files_array = new cpointer[files.size()];
  guint i = 0;
  for(type_vec_files::const_iterator iter = files.begin(); iter != files.end(); iter++)
  {
    type_vec_files::const_reference refPtr = *iter;
    files_array[i] = refPtr->gobj();
  }

  g_application_open(gobj(), files_array, files.size(), hint.c_str());

  delete[] files_array ;
}

} // namespace Gio
