// -*- Mode: C++; indent-tabs-mode: nil; c-basic-offset: 2 -*-

/* Copyright (C) 2007 The giomm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <gio/gasyncresult.h>

#include <glibmm/interface.h>
#include <glibmm/object.h>

_DEFS(giomm,gio)
_PINCLUDE(glibmm/private/interface_p.h)

namespace Gio {

class AsyncResult;
typedef sigc::slot<void, Glib::RefPtr<AsyncResult>& > SlotAsyncReady;

class AsyncResult : public Glib::Interface
{
  _CLASS_INTERFACE(AsyncResult, GAsyncResult, G_ASYNC_RESULT, GAsyncResultIface)

public:
  _IGNORE(g_async_result_get_user_data)

  //Note that this returns a reference, unlike most GTK+ get_*() functions,
  //so we don't need to use refreturn.
  _WRAP_METHOD(Glib::RefPtr<Glib::Object> get_source_object(),
               g_async_result_get_source_object)
  _WRAP_METHOD(Glib::RefPtr<const Glib::Object> get_source_object() const,
               g_async_result_get_source_object, constversion)

  _WRAP_VFUNC(Glib::RefPtr<Glib::Object> get_source_object(),
              "get_source_object")
};

} // namespace Gio

