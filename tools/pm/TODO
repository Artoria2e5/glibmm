- On construction of WrapParser take Common::Api as parameter.

- Common::Api will give an outputter to use.

- Outputter should be split into two classes - common part and backend part.

- Backend should have methods like used in Common::Api and a method returning an outputter backend.

- Add exceptions, so instead of using print STDERR "message\n"; exit 1; everywhere die() could be used.
  See Exception::Class module.

- Design an outputter backend interface.

- Implement outputter backend for Defs.

Some more details should come here.

LATER:

- Get rid of m4 stuff by implementing a "core" set of sort of plugins or something - have to think about it.
