# t^foo - tag name foo
# a^[name,mandatory(t or f as in true/false),value(empty if none)],[...],[...],...
# k^kid1,kid2,...
# p^parent1,parent2,...
#
# m^macro_name,substituted text
# use of macro:
# k^!macro_name!

t^top-level
a^
k^repository
p^

t^repository
# xmlns:glib should be mandatory, but seemingly some handwritten gir files do not specify it.
a^[version,t,'1.2'],[xmlns,t,'http://www.gtk.org/introspection/core/1.0'],[xmlns:c,t,'http://www.gtk.org/introspection/c/1.0'],[xmlns:glib,f,'http://www.gtk.org/introspection/glib/1.0']
k^include,package,c:include,namespace
p^top-level

t^include
a^[name,t,],[version,t,]
k^
p^repository

t^package
a^[name,t,]
k^
p^repository

t^c:include
a^[name,t,]
k^
p^repository

t^namespace
a^[name,t,],[version,t,],[shared-library,f,],[c:identifier-prefixes,t,],[c:symbol-prefixes,t,]
k^function,enumeration,bitfield,class,interface,callback,record,union,glib:boxed,alias,constant
p^repository

m^atts_version,[version,f,]
m^atts_generic,[introspectable,f,1],[deprecated,f,],[deprecated-version,f,]
m^kids_generic,attribute,doc
m^atts_throws,[throws,f,0]
m^atts_callable,[name,t,],!atts_version!,!atts_generic!,!atts_throws!
m^kids_callable,!kids_generic!,return-value,parameters

m^atts_function,[c:identifier,f,],[shadowed-by,f,],[shadows,f,],[moved-to,f,],!atts_callable!
m^kids_function,!kids_callable!

t^function
a^!atts_function!
k^!kids_function!
p^namespace,enumeration,bitfield,glib:boxed,record,class,interface

m^atts_registered,[glib:type-name,f,],[glib:get-type,f,]

t^enumeration
a^[name,t,],!atts_version!,!atts_generic!,!atts_registered!,[c:type,t,],[glib:error-domain,f,]
k^!kids_generic!,member,function
p^namespace

t^bitfield
a^[name,t,],!atts_version!,!atts_generic!,!atts_registered!,[c:type,t,]
k^!kids_generic!,member,function
p^namespace

m^kids_type_field,field,record,union

m^atts_ci_common,[name,t,],[c:symbol-prefix,t,],[c:type,f,],!atts_version!,!atts_generic!,[glib:type-name,t,],[glib:get-type,f,],[glib:type-struct,f,]
m^kids_ci_common,!kids_generic!,function,virtual-method,method,property,!kids_type_field!,glib:signal


t^class
a^!atts_ci_common!,[parent,f,],[abstract,f,0],[glib:fundamental,f,0],[glib:ref-func,f,],[glib:unref-func,f,],[glib:set-value-func,f,],[glib:get-value-func,f,]
k^!kids_ci_common!,implements,constructor
p^namespace

t^interface
a^!atts_ci_common!
k^!kids_ci_common!,prerequisite
p^namespace

t^callback
a^[c:type,f,],!atts_callable!
k^!kids_callable!
p^namespace,class,interface,record,union

t^record
a^[name,f,],[c:type,f,],[disguised,f,0],[foreign,f,0],[glib:is-gtype-struct-for,f,],!atts_version!,!atts_generic!,!atts_registered!,[c:symbol-prefix,f,]
k^!kids_generic!,!kids_type_field!,constructor,method,function
p^namespace,class,interface,record,union

t^union
a^[name,f,],[c:type,f,],!atts_version!,!atts_generic!,!atts_registered!,[c:symbol-prefix,f,]
k^!kids_generic!,!kids_type_field!,constructor,method,function
p^namespace,class,interface,record,union

t^glib:boxed
a^[glib:name,t,],[c:symbol-prefix,f,],!atts_registered!
k^!kids_generic!,constructor,method,function
p^namespace

t^alias
a^[name,t,],[c:type,f,],!atts_generic!
k^!kids_generic!,type
p^namespace

m^kids_type_type,varargs,array,type

t^constant
a^[name,t,],[value,t,],[c:type,t,]
k^!kids_type_type!
p^namespace

m^parents_callable_kids,method,function,constructor,virtual-method,callback

m^parents_generic,alias,!parents_callable_kids!,return-value,parameter,enumeration,bitfield,class,interface,glib:boxed,property,record,union,field,glib:signal

t^attribute
a^[name,t,],[value,t,]
k^
p^!parents_generic!

t^doc
a^[xml:whitespace,t,'preserve']
k^
p^!parents_generic!

t^return-value
a^[transfer-ownership,f,],[skip,f,0]
k^!kids_generic!,!kids_type_type!
p^!parents_callable_kids!

t^parameters
a^
k^parameter
p^!parents_callable_kids!

t^member
a^[name,t,],[value,t,],[c:identifier,t,],[glib:nick,f,]
k^
p^enumeration,bitfield

t^implements
a^[name,t,]
k^
p^class

t^constructor
a^!atts_function!
k^!kids_function!
p^class,glib:boxed,record,union

t^virtual-method
a^[invoker,f,],!atts_callable!
k^!kids_callable!
p^class,interface

t^method
a^!atts_function!
k^!kids_function!
p^class,interface,glib:boxed,record,union

t^property
a^[name,t,],!atts_version!,!atts_generic!,[readable,f,1],[writable,f,0],[construct,f,0],[construct-only,f,0],[transfer-ownership,t,]
k^!kids_generic!,!kids_type_type!
p^class,interface

t^field
a^[name,t,],!atts_generic!,[readable,f,1],[writable,f,0],[bits,f,],[private,f,0]
k^callback,!kids_generic!,!kids_type_type!
p^class,interface,record,union

t^glib:signal
a^[name,t,],[when,f,],[no-recurse,f,0],[detailed,f,0],[action,f,0],[no-hooks,f,0],!atts_version!,!atts_generic!
k^!kids_generic!,return-value,parameters
p^class,interface

t^prerequisite
a^[name,t,]
k^
p^interface

m^parents_type_kids,return-value,parameter,array,type,constant,property,field

t^type
a^[c:type,f,],[name,f,],[foreign,f,0]
k^!kids_type_type!
p^alias,!parents_type_kids!

t^varargs
a^
k^
p^!parents_type_kids!

t^array
a^[c:type,f,],[name,f,],[zero-terminated,f,1],[fixed-size,f,],[length,f,]
k^!kids_type_type!
p^!parents_type_kids!

t^parameter
a^[name,f,],[direction,f,'in'],[caller-allocates,f,0],[transfer-ownership,f,],[allow-none,f,0],[scope,f,],[closure,f,],[destroy,f,],[skip,f,0]
k^!kids_generic!,!kids_type_type!
p^parameters
