/* Copyright 2010 The glibmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <glibmm/variant.h>
#include <glib/gvariant.h>

namespace Glib
{


/****************** Specializations ***********************************/

// static
const GVariantType* Variant<VariantBase>::variant_type()
{
  return G_VARIANT_TYPE_VARIANT;
}

Variant<VariantBase> Variant<VariantBase>::create(const VariantBase& data)
{
  return Variant<VariantBase>(g_variant_new_variant(const_cast<GVariant*>(data.gobj())));
}

VariantBase Variant<VariantBase>::get() const
{
  return VariantBase(g_variant_get_variant(gobject_));
}

// static
const GVariantType* Variant<Glib::ustring>::variant_type()
{
  return G_VARIANT_TYPE_STRING;
}

Variant<Glib::ustring>
Variant<Glib::ustring>::create(const Glib::ustring& data)
{
  return Variant<Glib::ustring>(g_variant_new_string(data.c_str()));
}

Glib::ustring Variant<Glib::ustring>::get() const
{
  return Glib::ustring(g_variant_get_string(gobject_, 0));
}

} // namespace Glib
