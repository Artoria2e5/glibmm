/* $Id$ */

/* Copyright (C) 2004 The glibmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

_DEFS(glibmm,glib)

#include <glibmm/ustring.h>
#include <glibmm/value.h>

#ifndef DOXYGEN_SHOULD_SKIP_THIS
extern "C" { typedef struct _GOptionEntry GOptionEntry; }
#endif


namespace Glib
{

_WRAP_ENUM(OptionArg, GOptionArg, NO_GTYPE)

/** TODO
 */
class OptionEntry
{
  _CLASS_GENERIC(OptionEntry, GOptionEntry)
public:

  //Copied from goption.h, instead of generated, so that we can put it inside the class.
  enum Flags
  {
    FLAG_HIDDEN = 1 << 0,
    FLAG_IN_MAIN = 1 << 1
  } GOptionFlags;

  OptionEntry();
  OptionEntry(const OptionEntry& src);
  virtual ~OptionEntry();
  
  OptionEntry& operator=(const OptionEntry& src);

#m4 _CONVERSION(`Glib::ustring',`const gchar*',`g_strdup(($3).c_str())')

  _MEMBER_GET(long_name, long_name, Glib::ustring, const char*)
  _MEMBER_SET(long_name, long_name, Glib::ustring, const char*)
  
  _MEMBER_GET(short_name, short_name, gchar, gchar)
  _MEMBER_SET(short_name, short_name, gchar, gchar)
  
  _MEMBER_GET(flags, flags, int, int)
  _MEMBER_SET(flags, flags, int, int)

  //The OptionArg must match the actual type of the arg_data.
  //TODO: Use template specializations to avoid the OptionArg parameter?
  void set_arg_data(OptionArg arg_type, void* data);
  
  
  //TODO: Is this ever used? G_OPTION_ARG_NONE,
  
  //TODO: G_OPTION_ARG_CALLBACK,

  //TODO: Remove these?        
  //_MEMBER_GET(arg, arg, OptionArg, GOptionArg)
  //_MEMBER_GET(arg_data, arg_data, void*, void*)

    
  _MEMBER_GET(description, description, Glib::ustring, const char*)
  _MEMBER_SET(description, description, Glib::ustring, const char*)
  
  _MEMBER_GET(arg_description, arg_description, Glib::ustring, const char*)
  _MEMBER_SET(arg_description, arg_description, Glib::ustring, const char*)
  
  GOptionEntry*       gobj()       { return gobject_; }
  const GOptionEntry* gobj() const { return gobject_; }
  
protected:

  GOptionEntry* gobject_;
};

} // namespace Glib

